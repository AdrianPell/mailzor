{"name":"Mailzor","body":"# mailzor\r\n\r\nIs a basic utility class to help generate and send emails using the Razor view engine to create email templates, quickly pluggable into your .NET app.\r\n\r\nThe original idea for this is from , with the \r\n\r\n - Original blog post covering it here:\r\n  - [kazimanzurrashid.com/use-razor-for-email-template-outside-asp-dot-net-mvc]( http://kazimanzurrashid.com/posts/use-razor-for-email-template-outside-asp-dot-net-mvc )\r\n - Original code\r\n   - [EmailTemplate.zip]( http://media.kazimanzurrashid.s3.amazonaws.com/EmailTemplate.zip )\r\n\r\n### Limitations\r\n  One right now is compiled dependency on System.Web.Razor 2.0.20126.16343 which is bundled with the package, see troubleshooting section at the bottom.\r\n\r\n## NuGet\r\n\r\n Get it from [nuget.org/packages/mailzor](https://nuget.org/packages/mailzor) or via Package Manager Console\r\n \r\n  > *PM> Install-Package mailzor*\r\n\r\n# Usage\r\n\r\n\tIEmailSystem mailzor;\r\n\t\r\n\tmailzor.SendMail(\r\n\t\tnew TaskNotificationMessage\r\n                    {\r\n                        To = \"email@domain.com\",\r\n                        From = \"source@domain.com\"\r\n                    });\r\n\r\n\r\n## IoC Wireup\r\n\r\nUsing an Autofac module (or just using this registration code in your composition root) to wire up the dependencies for the `mailzor` utility.\r\n\t\r\n\tbuilder.RegisterModule(new MailzorModule \r\n\t\t{ \r\n\t\t\tTemplatesDirectory = @\"..\\Templates\",\r\n\t\t\tSmtpServerIp = \"10.0.0.99\", // your smtp server\r\n\t\t\tSmtpServerPort = 25\r\n\t\t});\r\n\r\n### Autofac\r\n\r\n\tpublic class MailzorModule : Autofac.Module\r\n\t{\r\n\t\tpublic string TemplatesDirectory { get; set; }\r\n\t\tpublic string SmtpServerIp { get; set; }\r\n\t\tpublic int SmtpServerPort { get; set; }\r\n\t\r\n\t\tprotected override void Load(ContainerBuilder builder)\r\n\t\t{\r\n\t\t\tbuilder\r\n\t\t\t\t.Register(\r\n\t\t\t\t\tc => new FileSystemEmailTemplateContentReader(TemplatesDirectory))\r\n\t\t\t\t.As<IEmailTemplateContentReader>();\r\n\t\r\n\t\t\tbuilder\r\n\t\t\t\t.RegisterType<EmailTemplateEngine>()\r\n\t\t\t\t.As<IEmailTemplateEngine>();\r\n\t\r\n\t\t\tbuilder\r\n\t\t\t\t.Register(\r\n\t\t\t\t\tc => new EmailSender\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tCreateClientFactory = () \r\n\t\t\t\t\t\t\t\t=> new SmtpClientWrapper(new SmtpClient(SmtpServerIp, SmtpServerPort))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t.As<IEmailSender>();\r\n\t\r\n\t\t\tbuilder\r\n\t\t\t\t.Register(\r\n\t\t\t\t\tc => new EmailSubsystem(\r\n\t\t\t\t\t\t\"sending@from-site.com\", \r\n\t\t\t\t\t\tc.Resolve<IEmailTemplateEngine>(), \r\n\t\t\t\t\t\tc.Resolve<IEmailSender>()))\r\n\t\t\t\t.As<IEmailSystem>();\r\n\t\t}\r\n\t}\r\n\r\n## Changes in this fork\r\n\r\n - A single entry point via `IEmailSystem`\r\n - Send message via `SendMail` on `IEmailSystem`\r\n - Some additional template loading checking, to ensure they're available and that it reports when it can't find them (in particular which template it couldn't find).\r\n \r\n## Troubleshooting\r\n - Because this library takes a fixed dependency on a version of 'System.Web.Razor' version: 2.0.20126.16343 so if you see an exception that's references a 'WriteAttribute' check for [exception image](http://yfrog.com/kksyjsp)\r\n   - *.config binding redirects for System.Web.Razor\r\n   - Any conflicting versions of System.Web.Razor\r\n \r\n\t> \tThe name 'WriteAttribute' does not exist in the current context\r\n\t\r\n## License\r\nLicensed under the MIT license.","tagline":"Using the Razor view engine to create email templates, quickly pluggable into your .NET app.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}